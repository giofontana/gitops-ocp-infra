---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki-netobserv-s3-job-sa-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
      - create
      - patch

  - apiGroups:
      - "route.openshift.io"
    resources:
      - routes
    verbs:
      - get
      - list    

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki-netobserv-s3-job-sa-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-netobserv-s3-job-sa-role
subjects:
  - kind: ServiceAccount
    name: cli-job-sa
    namespace: netobserv
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cli-job-sa
  namespace: netobserv
---
apiVersion: batch/v1
kind: Job
metadata:
  name: loki-s3-setup
  namespace: netobserv
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/openshift4/ose-cli:latest
          command:
            - /bin/bash
            - -c
            - |

              echo "Create loki object bucket secret"
              BUCKET_HOST=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_HOST}')
              BUCKET_NAME=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_NAME}')
              BUCKET_PORT=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_PORT}')
              ACCESS_KEY_ID=$(oc get -n netobserv secret loki-bucket-odf -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)
              SECRET_ACCESS_KEY=$(oc get -n netobserv secret loki-bucket-odf -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)

              oc create -n netobserv secret generic network-loki-odf \
                --from-literal=access_key_id="$ACCESS_KEY_ID" \
                --from-literal=access_key_secret="$SECRET_ACCESS_KEY" \
                --from-literal=bucketnames="$BUCKET_NAME" \
                --from-literal=endpoint="https://$BUCKET_HOST:443"

              echo -n "secret created successfully!"

          imagePullPolicy: IfNotPresent
          name: observability-setup
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30
