apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  labels:
    run: quay-wait-job
  name: quay-wait-job
  namespace: openshift-operators
spec:
  template:
    spec:
      activeDeadlineSeconds: 600
      containers:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          command:
            - /bin/bash
            - -c
            - |
              set -e

              echo "Waiting Quay deployment..."
              sleep 10
              TIMEOUT=0 
              QUAY_NAMESPACE=$(oc get quayregistry -A -o jsonpath='{.items[].metadata.namespace}')
              QUAY_INSTANCE=$(oc get quayregistry -A -o jsonpath='{.items[].metadata.name}')

              status=$(oc get quayregistry $QUAY_INSTANCE -n $QUAY_NAMESPACE -o jsonpath='{.status.conditions[?(@.type=="Available")].status}' || true)
              while [ "$status" != "True" ]; do
                echo "Quay is still being deployed. Waiting one more minute..."
                sleep 60
                if [ $TIMEOUT -gt 30 ]; then #15 MINUTES TIMEOUT
                  echo "Timeout reached... Check the status of the deployment on OpenShift."
                  exit 1
                fi
                TIMEOUT=$(($TIMEOUT+1))
                status=$(oc get quayregistry $QUAY_INSTANCE -n $QUAY_NAMESPACE -o jsonpath='{.status.conditions[?(@.type=="Available")].status}' || true)
              done

              echo "Quay deployment finished!"

              sleep 5

              echo "Setting password for initial admin user"
              QUAY_ENDPOINT=$(oc get quayregistry -A -o jsonpath='{.items[].status.registryEndpoint}')
              QUAY_USER="admin"
              QUAY_PASSWD="openshift"
              QUAY_EMAIL="admin@example.com"

              curl -X POST -k  $QUAY_ENDPOINT/api/v1/user/initialize --header "Content-Type: application/json" --data "{ \"username\": \"$QUAY_USER\", \"password\":\"$QUAY_PASSWD\", \"email\": \"$QUAY_EMAIL\", \"access_token\": true}"
              echo "Password set succesfully for admin user"

          imagePullPolicy: IfNotPresent
          name: quay-wait-job
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: argocd
      serviceAccountName: argocd
      terminationGracePeriodSeconds: 30

      